#include<bits/stdc++.h>
using namespace std;

class trienode{
    public:
        char data;
        trienode* child[26];
        bool isterminal;
        trienode(char ch){
            data=ch;
            isterminal=false;
            for(int i=0;i<26;i++)
                child[i]=NULL;
        }
};

class trie{
    public:
        trienode *root;
        void insertatutil(string s,trienode* &root){
            if(s.length()==0)
                root->isterminal=true;

            int index=s[0]-'A';
            trienode* children;
            if(root->child[index] != NULL){
                children=root->child[index];
            }    
            else{
                children = new trienode(word[0]);
                root->child[index]=children;
            }
            insertatutil(s.substr(1),root);
        }
        void insertword(string str){
            insertatutil(str,root);
        }
        bool searchutil(trienode* root,string word){
            if(word.length() == 0)
                return root->isterminal;
            int index=word[0]-'A';
            trienode* children;
            if(root->child[index] != NULL)
                children=root->child[index];
            else 
                return false;
            return searchutil(root,word.substr(1));            
        }
        bool searchword(string word){
            return searchutil(root,word);
        }
};
int main(){
    trie* t=new trie();
    t->insertword("nikunj");
    cout<<t->searchword("nikunj");
}